# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Main

on:
  push:
    branches: [ "main", "dev" ]

jobs:
  check-changelog:
    uses: ./.github/workflows/check-changelog.yml
  test:
    uses: ./.github/workflows/test.yml
    with:
      branch: main
  build:
    needs: test
    uses: ./.github/workflows/build.yml
    with:
      branch: main
  build-artifacts:
    needs: build
    uses: ./.github/workflows/build-artifacts.yml
    with:
      artifact-name: ${{ github.sha }}
      branch: main
  create-release:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Retrieve package.json version
        id: version
        run: |
          PKG_VERSION=$(npm pkg get version --workspaces=false | tr -d \")
          echo "PKG_VERSION=$PKG_VERSION" >> "$GITHUB_OUTPUT"
          # git tag $PKG_VERSION
      - run:
          echo ${{ steps.version.outputs.PKG_VERSION }}
      - name: Tags new version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_sha: ${{ github.sha }}
          custom_tag: ${{ steps.version.outputs.PKG_VERSION }}
          tag_prefix: v
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          commitish: ${{ github.sha }}
          tag_name: "v${{ steps.version.outputs.PKG_VERSION }}"
          release_name: "Release v${{ steps.version.outputs.PKG_VERSION }}"
          draft: false
          prerelease: false
